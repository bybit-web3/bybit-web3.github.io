import{_ as s,a as i,b as a,c as t,d as n}from"./chunks/image-3.lK5qdSFn.js";import{_ as l,c as h,o as p,V as e}from"./chunks/framework.fZt_wkQb.js";const m=JSON.parse('{"title":"EVM链接入指南","description":"","frontmatter":{},"headers":[],"relativePath":"zh/evm.md","filePath":"zh/evm.md","lastUpdated":1726142727000}'),k={name:"zh/evm.md"},d=e(`<h1 id="evm链接入指南" tabindex="-1">EVM链接入指南 <a class="header-anchor" href="#evm链接入指南" aria-label="Permalink to &quot;EVM链接入指南&quot;">​</a></h1><h2 id="支持的链" tabindex="-1">支持的链 <a class="header-anchor" href="#支持的链" aria-label="Permalink to &quot;支持的链&quot;">​</a></h2><h3 id="托管钱包" tabindex="-1">托管钱包 <a class="header-anchor" href="#托管钱包" aria-label="Permalink to &quot;托管钱包&quot;">​</a></h3><table><thead><tr><th>链名称</th><th>Chain ID</th><th>状态</th></tr></thead><tbody><tr><td>Ethereum</td><td>1</td><td>✅</td></tr><tr><td>MANTLE</td><td>5000</td><td>✅</td></tr><tr><td>BNB Chain</td><td>56</td><td>✅</td></tr><tr><td>Polygon</td><td>137</td><td>✅</td></tr><tr><td>Optimism</td><td>10</td><td>✅</td></tr><tr><td>Avalanche C</td><td>43114</td><td>✅</td></tr><tr><td>Arbitrum One</td><td>42161</td><td>✅</td></tr><tr><td>Fantom</td><td>250</td><td>✅</td></tr><tr><td>zkSync Era</td><td>324</td><td>✅</td></tr><tr><td>Linea</td><td>59144</td><td>✅</td></tr><tr><td>Base</td><td>8453</td><td>✅</td></tr><tr><td>Manta Pacific</td><td>169</td><td>✅</td></tr><tr><td>ZetaChain</td><td>7000</td><td>✅</td></tr><tr><td>MERLIN</td><td>4200</td><td>✅</td></tr><tr><td>Blast</td><td>81457</td><td>✅</td></tr></tbody></table><h3 id="助记词-私钥钱包" tabindex="-1">助记词/私钥钱包 <a class="header-anchor" href="#助记词-私钥钱包" aria-label="Permalink to &quot;助记词/私钥钱包&quot;">​</a></h3><table><thead><tr><th>链名称</th><th>Chain ID</th><th>状态</th></tr></thead><tbody><tr><td>Ethereum</td><td>1</td><td>✅</td></tr><tr><td>MANTLE</td><td>5000</td><td>✅</td></tr><tr><td>BNB Chain</td><td>56</td><td>✅</td></tr><tr><td>Polygon</td><td>137</td><td>✅</td></tr><tr><td>Optimism</td><td>10</td><td>✅</td></tr><tr><td>Avalanche C</td><td>43114</td><td>✅</td></tr><tr><td>Arbitrum One</td><td>42161</td><td>✅</td></tr><tr><td>Fantom</td><td>250</td><td>✅</td></tr><tr><td>zkSync Era</td><td>324</td><td>✅</td></tr><tr><td>ZetaChain</td><td>7000</td><td>✅</td></tr><tr><td>OKX Chain</td><td>66</td><td>✅</td></tr><tr><td>MERLIN</td><td>7000</td><td>✅</td></tr><tr><td>BEvmChain</td><td>11501</td><td>✅</td></tr><tr><td>Manta Pacific</td><td>169</td><td>✅</td></tr><tr><td>Linea</td><td>59144</td><td>✅</td></tr><tr><td>Blast</td><td>81457</td><td>✅</td></tr><tr><td>Base</td><td>8453</td><td>✅</td></tr><tr><td>BounceBit</td><td>6001</td><td>✅</td></tr><tr><td>B Square</td><td>223</td><td>✅</td></tr><tr><td>Cronos</td><td>25</td><td>✅</td></tr><tr><td>GM Network</td><td>2777</td><td>✅</td></tr><tr><td>Bitlayer</td><td>200901</td><td>✅</td></tr><tr><td>Taiko</td><td>167000</td><td>✅</td></tr><tr><td>Scroll</td><td>534352</td><td>✅</td></tr></tbody></table><h2 id="集成bybit-wallet" tabindex="-1">集成Bybit Wallet <a class="header-anchor" href="#集成bybit-wallet" aria-label="Permalink to &quot;集成Bybit Wallet&quot;">​</a></h2><p>兼容过 Metamask 的 dapp，provider 都是调用 window.ethereum。对接 Bybit Wallet 插件钱包，直接把 window.ethereum 换成 window.bybitWallet 即可。</p><h2 id="离线签名方法及支持的类型" tabindex="-1">离线签名方法及支持的类型 <a class="header-anchor" href="#离线签名方法及支持的类型" aria-label="Permalink to &quot;离线签名方法及支持的类型&quot;">​</a></h2><table><thead><tr><th>类型</th><th>是否支持</th><th>备注</th></tr></thead><tbody><tr><td>eth_sign</td><td>❌</td><td>因存在安全风险，当前不支持</td></tr><tr><td>personal_sign</td><td>✅</td><td></td></tr><tr><td>eth_signTypedData</td><td>❌</td><td>因存在安全风险，当前不支持</td></tr><tr><td>eth_signTypedData_v3</td><td>❌</td><td>因存在安全风险，当前不支持</td></tr><tr><td>eth_signTypedData_v4</td><td>✅</td><td></td></tr></tbody></table><h2 id="eip6963" tabindex="-1">EIP6963 <a class="header-anchor" href="#eip6963" aria-label="Permalink to &quot;EIP6963&quot;">​</a></h2><p>Bybit Wallet 支持 EIP6963，EIP6963是一个解决多个钱包的共用<code>window.ethereum</code>的问题的提案，详情请参考<a href="https://eips.ethereum.org/EIPS/eip-6963" target="_blank" rel="noreferrer">EIP6963</a>。 我们鼓励开发者优先适用EIP6963，以便于您的Dapp能够兼容更多的钱包。 Dapp中只需要加入以下代码即可：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> providers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EIP6963ProviderDetail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onPageLoad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;eip6963:announceProvider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EIP6963AnnounceProviderEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      providers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event.detail);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eip6963:requestProvider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>更多的使用方法请参考<a href="https://eips.ethereum.org/EIPS/eip-6963" target="_blank" rel="noreferrer">EIP6963</a>。</p><h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h2 id="检测bybit-wallet是否已安装并正常运行" tabindex="-1">检测Bybit Wallet是否已安装并正常运行 <a class="header-anchor" href="#检测bybit-wallet是否已安装并正常运行" aria-label="Permalink to &quot;检测Bybit Wallet是否已安装并正常运行&quot;">​</a></h2><p>在安装并运行 Bybit 钱包后，在浏览器新页面的开发者控制台中可以看到一个 window.bybitWallet 对象。这就是您的网站与 Bybit 钱包的互动方式。 web3 浏览器检测 要检测浏览器里是否安装了 Bybit 钱包并且正在运行，请复制并粘贴以下代码片段到您的浏览器的开发者控制台。</p><p>首先，我们需要检测Bybit Wallet是否已安装并正常运行。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.bybitWallet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;undefined&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bybitWallet is installed!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="定义dapp的图标" tabindex="-1">定义DApp的图标 <a class="header-anchor" href="#定义dapp的图标" aria-label="Permalink to &quot;定义DApp的图标&quot;">​</a></h2><p>当您的网站向 Bybit Wallet 用户发出登录请求时，Bybit Wallet可能会生成一个模态窗口，这个窗口上会显示您网站的图标。</p><p><img src="`+s+`" alt="favicon"></p><p>我们会使用 HTML 选择器 <code>&lt;head&gt; link[rel=&quot;shortcut icon&quot;]</code> 来获取这个图标。在定义图标时，您需要遵循 Favicon 标准，并确保网站的 head 里有一个 link 标签，类似 <code>rel=&quot;shortcut icon&quot;</code> 这样。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shortcut icon&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://your-site.com/your-icon.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="用户状态" tabindex="-1">用户状态 <a class="header-anchor" href="#用户状态" aria-label="Permalink to &quot;用户状态&quot;">​</a></h2><p>目前，在与这个API交互时，需要考虑到以下两个问题：</p><ul><li>当前的网络是什么？</li><li>当前的账户是什么？</li></ul><p>这两点都可以通过 window.bybitWallet.chainId 和 window.bybitWallet.selectedAddress 同步获得。</p><p>您也可以使用事件来监听变化:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 账户变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.bybitWallet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;accountsChanged&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">accounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (accounts.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;账户切换：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, accounts[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;账户断开连接&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 网络变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.bybitWallet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;networkChanged&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chainId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;网络切换，chainId：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, chainId)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="切链" tabindex="-1">切链 <a class="header-anchor" href="#切链" aria-label="Permalink to &quot;切链&quot;">​</a></h2><p>Bybit Wallet支持用户在不同的链之间切换，比如从以太坊切换到BSC。您可以通过调用window.bybitWallet.request方法来切换链：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.ethereum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wallet_switchEthereumChain&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    params: [{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      chainId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>此方法请求用户提供一个chainId来识别。返回值为一个解析为单个chainId字符串数组的 Promise。如果用户拒绝该请求，Promise 将被拒绝并返回 4001 错误。 该请求会导致一个Bybit Wallet的弹窗出现。您应该只在响应用户操作时请求账户，比如一个用户在单击按钮的时候。在请求仍处于待处理状态时，您应该始终禁用导致请求被触发的按钮。 如果您无法检索用户的账户，您应该先让用户发起账户请求，而不是切链操作。</p><h2 id="添加新链" tabindex="-1">添加新链 <a class="header-anchor" href="#添加新链" aria-label="Permalink to &quot;添加新链&quot;">​</a></h2><p>Bybit Wallet暂时还不支持用户添加其他EVM链，目前只能使用内建的公链。</p><h2 id="添加代币" tabindex="-1">添加代币 <a class="header-anchor" href="#添加代币" aria-label="Permalink to &quot;添加代币&quot;">​</a></h2><p>Bybit Wallet暂时还不支持用户通过window.bybitWallet的API添加代币，如果需要添加自定义的ERC20代币，可以自己到钱包的UI界面中自行添加。</p><p><img src="`+i+'" width="400"><img src="'+a+`" width="400"></p><h2 id="发送交易" tabindex="-1">发送交易 <a class="header-anchor" href="#发送交易" aria-label="Permalink to &quot;发送交易&quot;">​</a></h2><p>交易是区块链上的一个正式动作，在Bybit Wallet中必须通过调用 eth_sendTransaction 方法来发起交易。交易可以涉及到简单的以太坊的发送，并可能会发送代币，创建一个新的智能合约，或以任何方式改变区块链上的状态。这些交易一定是由一个来自 外部账户 的签名，或一个简单的密钥对进行发起的。</p><p>在bybit钱包中，通过使用 window.bybitWallet.request 方法来发送一个交易将会组成一个类似以下案例的对象：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> transactionParameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gasPrice: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x09184e72a000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// customizable by user during confirmation.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gas: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x2710&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// customizable by user during confirmation.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  to: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x0000000000000000000000000000000000000000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Required except during contract publications.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  from: bybitWallet.selectedAddress, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// must match user&#39;s active address.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x00&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Only required to send ether to the recipient from the initiating external account.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;0x7f7465737432000000000000000000000000000000000000000000000000000000600057&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional, but used for defining smart contract creation and interaction.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  chainId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Used to prevent transaction reuse across blockchains. Auto-filled.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// txHash is a hex string</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// As with any RPC call, it may throw an error</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> txHash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bybitWallet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;eth_sendTransaction&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  params: [transactionParameters],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h3><ul><li>Gas Price <code>可选</code></li></ul><p>可选参数 – 建议在私链上使用。 在以太坊中，每笔交易所消耗的 Gas 都会有一个指定的价格。区块生产者在创建下一个区块时，为了达到利润最大化，会优先处理 Gas 价格较高的交易。这意味着，一个较高的 Gas 价格通常会让您的交易被更快地处理，但代价则是更高的交易费用。请注意，此参数可能不适用于 L2 网络和BSC，FTM网络，因为 L2 网络可能有一个恒定的 Gas 价格，甚至不存在 Gas 价格。 总而言之，虽然您可以在Bybit钱包的默认网络上忽略这个参数，但是您的应用程序可能会比我们更了解目标网络的参数设定。在我们的默认网络中，Bybit钱包允许用户在打包交易的时候进行&quot;慢&quot;、&quot;中&quot;和&quot;快&quot;的选择，相对应越来越高的 Gas 溢价。</p><ul><li>Gas Limit <code>可选</code></li></ul><p>可选参数，并且为 DApp 开发者较少用到的参数。 Gas 限制是一个可选参数，我们会自动计算出一个合理的 Gas 价格。您应该能了解到所部署的智能合约是否曾因某些原因而受益于该自定义参数。</p><ul><li>To <code>可选</code></li></ul><p>一个十六进制编码的 Ethereum 地址。与收件人进行交易时所需提供的参数（除合约创建外的所有交易。 当没有 to 值，但有 data 值时，新合约就会被创建。</p><ul><li>Value <code>可选</code></li></ul><p>要发送的网络本地货币的十六进制编码值。在主 Ethereum 网络中，即 Ether。此值以_wei_计价，即 1e-18ether，开发者可以借助Ethereum Unit Converter来理解单位转换。 请注意，这些在以太坊中经常使用的数字比本地 JavaScript 数字的精度要高得多。如果没有提前判定，可能会导致未知的情况。出于这个原因，我们强烈建议您在操作用于区块链的数值时使用bn.js。</p><ul><li>Data <code>可选</code></li></ul><p>创建智能合约或与智能合约进行交互时需要此参数。 这个数值也用于指定合约方法和它们的参数。您可在 the solidity ABI spec上了解更多关于该数据的编码方式。</p><ul><li>返回值</li></ul><p>DATA，32 字节 - 交易哈希，如果交易尚不可用，则为零哈希。 当你创建合约时，交易被挖掘后，使用 eth_getTransactionReceipt 获取合约地址。</p><h2 id="签名信息" tabindex="-1">签名信息 <a class="header-anchor" href="#签名信息" aria-label="Permalink to &quot;签名信息&quot;">​</a></h2><ul><li>eth_sign 交易签名</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> window.bybitWallet.request({</span></span>
<span class="line"><span>     method: &#39;eth_sign&#39;,</span></span>
<span class="line"><span>     params: [account[0], &quot;0xdeadbeaf&quot;],</span></span>
<span class="line"><span> })</span></span>
<span class="line"><span>     .then((res) =&gt; console.log(res))</span></span>
<span class="line"><span>     .catch((error) =&gt; console.error);</span></span></code></pre></div><p>sign 方法计算以太坊特定的签名：sign(keccak256(&quot;\\x19Ethereum Signed Message:\\n&quot; + len(message) + message)))。 通过在消息中添加前缀，可以将计算出的签名识别为以太坊特定的签名。 这可以防止恶意去中心化应用程序可以签署任意数据（例如交易）并使用签名冒充受害者的滥用行为。</p><ul><li>personal_sign 消息签名</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>const signedData = await window.bybitWallet.request({</span></span>
<span class="line"><span>    method: &quot;personal_sign&quot;,</span></span>
<span class="line"><span>    params: [</span></span>
<span class="line"><span>      &#39;message to sign.&#39;,</span></span>
<span class="line"><span>      //await ethereum?.request({method: &quot;eth_requestAccounts&quot;})[0]</span></span>
<span class="line"><span>      account,</span></span>
<span class="line"><span>    ],</span></span>
<span class="line"><span> });</span></span></code></pre></div><p>在以太坊中，签名不仅仅只会发生在发送交易的时候。 有时候，某个网站可能需要确认我们是否是某个账号的主人，那么它会拿一条消息出来，让我们签名，以便它确认我们的身份。这种用途一般使用personal_sign。</p><ul><li>eth_signTypedData 结构化数据签名(EIP-712)</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> domain </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chainId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uint256&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;verifyingContract&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;address&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> domainData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Gold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chainId: ethereum.chainId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    verifyingContract: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;owner&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;spender&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uint256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;nonce&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uint256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;deadline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uint256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    owner: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spender: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;0x70997970C51812dc3A010C7d01b50e0d17dc79C8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nonce: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    deadline: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eip712TypedData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    types: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        EIP712Domain: domain,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Permit: permit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain: domainData,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    primaryType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Permit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    message: message</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eip712TypedData)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.bybitWallet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eth_signTypedData_v4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    params: [ethereum.selectedAddress, data]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.log)</span></span></code></pre></div><p>每个项目可以自行签名的标准。但是这只适合简单的情形，例如验证账户拥有者，此时签名的消息内容如何是无关紧要的。但是如果是涉及代币、NFT资产的转移，就需要比较小心了，如果设计不好很容易被攻击者利用，于是发展出了标准的结构化签名标准EIP-712。</p><h2 id="切换钱包类型" tabindex="-1">切换钱包类型 <a class="header-anchor" href="#切换钱包类型" aria-label="Permalink to &quot;切换钱包类型&quot;">​</a></h2><p>Bybit Wallet支持两种类型的钱包：托管钱包和助记词/私钥钱包。您可以通过调用以下方法来切换钱包类型：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.bybitWallet.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    method: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;switchWallet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    params: [{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      walletType: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 枚举值：[1, 4，5]，1: 托管钱包，4: 私钥钱包，5: 助记词</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      chainType: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 链类型，1: EVM链，2: SUI, 3: Solana 4: BTC 5: Stacks </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>该方法会请求用户提供一个<code>walletType</code>的数组和<code>chainType</code>来切换钱包类型，发起请求后会弹出一个Bybit Wallet的弹窗。如下图所示： <img src="`+t+'" alt="alt text"></p><p>如果用户当前的钱包不符合切换的条件，相关的组件会置灰，用户需要点击switch按钮来切换钱包类型。 <img src="'+n+'" alt="alt text"></p><p>当选择好正确的钱包，并确认后，Bybit Wallet会返回钱包地址给DApp。</p>',72),E=[d];function r(g,o,y,c,F,u){return p(),h("div",null,E)}const B=l(k,[["render",r]]);export{m as __pageData,B as default};
